SELECT e.employee_id, e.first_name,
e.department_id, d.department_name
FROM employees e
INNER JOIN departments d
ON e.department_id = d.department_id; --106

SELECT e.employee_id, e.first_name,
e.department_id, d.department_name
FROM employees e
LEFT OUTER JOIN departments d
ON e.department_id = d.department_id; --107

SELECT e.employee_id, e.first_name,
e.department_id, d.department_name
FROM employees e
RIGHT OUTER JOIN departments d
ON e.department_id = d.department_id; --122

SELECT e.employee_id, e.first_name,
e.department_id, d.department_name
FROM employees e
FULL OUTER JOIN departments d
ON e.department_id = d.department_id; --123

SELECT e.employee_id, e.first_name || ' ' ||e.last_name AS full_name,
e.department_id, d.department_name
FROM employees e
INNER JOIN departments d
ON e.department_id = d.department_id
WHERE e.employee_id =200; --1

SELECT e.employee_id, e.first_name,
e.job_id, j.job_title
FROM employees e
INNER JOIN jobs j
ON e.job_id = j.job_id
ORDER BY e.first_name ASC; --107

SELECT *
FROM jobs j
LEFT OUTER JOIN job_history h
ON j.job_id = h.job_id; --21

SELECT e.first_name || ' ' || e.last_name, d.department_name
FROM employees e
INNER JOIN departments d
ON e.department_id = d.department_id
WHERE e.first_name = 'Steven'
AND e.last_name = 'King'; --1

SELECT *
FROM employees 
CROSS JOIN departments; --2889

--문제 7.
--EMPLOYEES 테이블과 DEPARTMENTS 테이블의 부서번호를 조인하고 SA_MAN 사원만의 사원번호, 이름, 
--급여, 부서명, 근무지를 출력하세요. (Alias를 사용)
SELECT e.job_id, e.employee_id, e.first_name, e.salary,
d.department_name
,l.city
FROM employees e
LEFT JOIN departments d
ON e.department_id = d.department_id
LEFT JOIN locations l
ON d.location_id = l.location_id
WHERE e.job_id = 'SA_MAN';
--문제 8.
-- employees, jobs 테이블을 조인 지정하고 job_title이 'Stock Manager', 'Stock Clerk'인 직원 정보만
--출력하세요.
SELECT e.first_name, e.salary, e.job_id
FROM employees e
LEFT JOIN jobs j
ON e.job_id = j.job_id
WHERE job_title IN ('Stock Manager','Stock Clerk');
--WHERE j.job_title = 'Stock Manager'
--OR j.job_title = 'Stock Clerk';

--문제 9.
-- departments 테이블에서 직원이 없는 부서를 찾아 출력하세요. LEFT OUTER JOIN 사용
SELECT d.department_name
FROM departments d
LEFT JOIN employees e
ON d.department_id = e.department_id
WHERE e.first_name IS NULL;

SELECT *
FROM departments d
LEFT JOIN employees e
ON d.department_id = e.department_id;


--문제 10. 
---join을 이용해서 사원의 이름과 그 사원의 매니저 이름을 출력하세요
--힌트) EMPLOYEES 테이블과 EMPLOYEES 테이블을 조인하세요.
SELECT e1.first_name || ' ' || e1.last_name, e2.first_name || ' ' || e2.last_name
FROM employees e1
LEFT JOIN employees e2
ON e1.manager_id = e2.employee_id;
--문제 11. 
--6. EMPLOYEES 테이블에서 left join하여 관리자(매니저)와, 매니저의 이름, 매니저의 급여 까지 출력하세요
--매니저 아이디가 없는 사람은 배제하고 급여는 역순으로 출력하세요
SELECT e1.first_name || ' ' || e1.last_name, e1.manager_id, e2.first_name || ' ' || e2.last_name, e2.salary
FROM employees e1
LEFT JOIN employees e2
ON e1.manager_id = e2.employee_id
WHERE e1.manager_id IS NOT NULL
ORDER BY e2.salary DESC;

문제 11. 
--6. EMPLOYEES 테이블에서 left join하여 관리자(매니저)와, 매니저의 이름, 매니저의 급여 까지 출력하세요
--매니저 아이디가 없는 사람은 배제하고 급여는 역순으로 출력하세요


